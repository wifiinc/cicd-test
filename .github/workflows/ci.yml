name: CI

on:
  pull_request:
    branches: [ master ]

permissions:
  pull-requests: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install build tools
        run: sudo apt-get update && sudo apt-get install -y cmake build-essential

      - name: Configure and build
        run: |
          cmake -S . -B build
          cmake --build build

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

  lint:
    name: Lint Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install clang-format
        run: sudo apt-get update && sudo apt-get install -y clang-format

      - name: Run clang-format check
        id: check_lint
        run: |
          clang-format -i $(find src include tests -name '*.cpp' -o -name '*.h')
          git diff > clang_diff.txt
          
          if [ -s clang_diff.txt ]; then
            echo "Formatting issues found."
            exit 1
          else
            echo "Code is properly formatted."
          fi
          
      - name: Comment on PR
        if: failure()
        run: |
          BODY=$(cat clang_diff.txt)
          ESCAPED_BODY=$(echo "$BODY" | jq -sRr @json)

          PR_NUMBER=$(jq -r .pull_request.number "$GITHUB_EVENT_PATH")
  
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Content-Type: application/json" \
               -d "{\"body\": \"### ⚠️ Clang-format suggestions:\\n\`\`\`diff\\n$ESCAPED_BODY\\n\`\`\`\"}" \
               "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"
